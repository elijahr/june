# AUTOGENERATED

import typing
from dataclasses import dataclass

import clang.cindex
from clang_base_enumerations import CursorKind


@dataclass
class CursorManager:
    _cursor: clang.cindex.Cursor

    @staticmethod
    def print_cursor_kind_counts(cursor: clang.cindex.Cursor):
        from collections import Counter

        kinds = []
        cursor_visitor: typing.Iterator[clang.cindex.Cursor] = cursor.get_children()
        for it in cursor_visitor:
            kinds.append(it.kind)
        print(Counter(kinds))

    @staticmethod
    def filter_node_list_by_node_kind(
        nodes: typing.Iterable[clang.cindex.Cursor], kinds: list[CursorKind]
    ) -> typing.Iterable[clang.cindex.Cursor]:
        return [node for node in nodes if node.kind in kinds]

    def unexposed_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.UNEXPOSED_DECL]
        )

    def struct_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.STRUCT_DECL]
        )

    def union_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.UNION_DECL]
        )

    def class_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CLASS_DECL]
        )

    def enum_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.ENUM_DECL]
        )

    def field_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.FIELD_DECL]
        )

    def enum_constant_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.ENUM_CONSTANT_DECL]
        )

    def function_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.FUNCTION_DECL]
        )

    def var_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.VAR_DECL]
        )

    def parm_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.PARM_DECL]
        )

    def objc_interface_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_INTERFACE_DECL]
        )

    def objc_category_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_CATEGORY_DECL]
        )

    def objc_protocol_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_PROTOCOL_DECL]
        )

    def objc_property_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_PROPERTY_DECL]
        )

    def objc_ivar_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_IVAR_DECL]
        )

    def objc_instance_method_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_INSTANCE_METHOD_DECL]
        )

    def objc_class_method_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_CLASS_METHOD_DECL]
        )

    def objc_implementation_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_IMPLEMENTATION_DECL]
        )

    def objc_category_impl_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_CATEGORY_IMPL_DECL]
        )

    def typedef_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.TYPEDEF_DECL]
        )

    def cxx_methods(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_METHOD]
        )

    def namespaces(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.NAMESPACE]
        )

    def linkage_specs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.LINKAGE_SPEC]
        )

    def constructors(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CONSTRUCTOR]
        )

    def destructors(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.DESTRUCTOR]
        )

    def conversion_functions(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CONVERSION_FUNCTION]
        )

    def template_type_parameters(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.TEMPLATE_TYPE_PARAMETER]
        )

    def template_non_type_parameters(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.TEMPLATE_NON_TYPE_PARAMETER]
        )

    def template_template_parameters(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.TEMPLATE_TEMPLATE_PARAMETER]
        )

    def function_templates(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.FUNCTION_TEMPLATE]
        )

    def class_templates(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CLASS_TEMPLATE]
        )

    def class_template_partial_specializations(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(),
            [CursorKind.CLASS_TEMPLATE_PARTIAL_SPECIALIZATION],
        )

    def namespace_aliass(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.NAMESPACE_ALIAS]
        )

    def using_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.USING_DIRECTIVE]
        )

    def using_declarations(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.USING_DECLARATION]
        )

    def type_alias_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.TYPE_ALIAS_DECL]
        )

    def objc_synthesize_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_SYNTHESIZE_DECL]
        )

    def objc_dynamic_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_DYNAMIC_DECL]
        )

    def cxx_access_spec_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_ACCESS_SPEC_DECL]
        )

    def objc_super_class_refs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_SUPER_CLASS_REF]
        )

    def objc_protocol_refs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_PROTOCOL_REF]
        )

    def objc_class_refs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_CLASS_REF]
        )

    def type_refs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.TYPE_REF]
        )

    def cxx_base_specifiers(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_BASE_SPECIFIER]
        )

    def template_refs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.TEMPLATE_REF]
        )

    def namespace_refs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.NAMESPACE_REF]
        )

    def member_refs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.MEMBER_REF]
        )

    def label_refs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.LABEL_REF]
        )

    def overloaded_decl_refs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OVERLOADED_DECL_REF]
        )

    def variable_refs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.VARIABLE_REF]
        )

    def invalid_files(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.INVALID_FILE]
        )

    def no_decl_founds(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.NO_DECL_FOUND]
        )

    def not_implementeds(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.NOT_IMPLEMENTED]
        )

    def invalid_codes(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.INVALID_CODE]
        )

    def unexposed_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.UNEXPOSED_EXPR]
        )

    def decl_ref_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.DECL_REF_EXPR]
        )

    def member_ref_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.MEMBER_REF_EXPR]
        )

    def call_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CALL_EXPR]
        )

    def objc_message_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_MESSAGE_EXPR]
        )

    def block_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.BLOCK_EXPR]
        )

    def integer_literals(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.INTEGER_LITERAL]
        )

    def floating_literals(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.FLOATING_LITERAL]
        )

    def imaginary_literals(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.IMAGINARY_LITERAL]
        )

    def string_literals(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.STRING_LITERAL]
        )

    def character_literals(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CHARACTER_LITERAL]
        )

    def paren_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.PAREN_EXPR]
        )

    def unary_operators(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.UNARY_OPERATOR]
        )

    def array_subscript_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.ARRAY_SUBSCRIPT_EXPR]
        )

    def binary_operators(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.BINARY_OPERATOR]
        )

    def compound_assignment_operators(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.COMPOUND_ASSIGNMENT_OPERATOR]
        )

    def conditional_operators(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CONDITIONAL_OPERATOR]
        )

    def cstyle_cast_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CSTYLE_CAST_EXPR]
        )

    def compound_literal_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.COMPOUND_LITERAL_EXPR]
        )

    def init_list_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.INIT_LIST_EXPR]
        )

    def addr_label_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.ADDR_LABEL_EXPR]
        )

    def stmtexprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.StmtExpr]
        )

    def generic_selection_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.GENERIC_SELECTION_EXPR]
        )

    def gnu_null_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.GNU_NULL_EXPR]
        )

    def cxx_static_cast_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_STATIC_CAST_EXPR]
        )

    def cxx_dynamic_cast_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_DYNAMIC_CAST_EXPR]
        )

    def cxx_reinterpret_cast_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_REINTERPRET_CAST_EXPR]
        )

    def cxx_const_cast_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_CONST_CAST_EXPR]
        )

    def cxx_functional_cast_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_FUNCTIONAL_CAST_EXPR]
        )

    def cxx_typeid_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_TYPEID_EXPR]
        )

    def cxx_bool_literal_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_BOOL_LITERAL_EXPR]
        )

    def cxx_null_ptr_literal_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_NULL_PTR_LITERAL_EXPR]
        )

    def cxx_this_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_THIS_EXPR]
        )

    def cxx_throw_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_THROW_EXPR]
        )

    def cxx_new_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_NEW_EXPR]
        )

    def cxx_delete_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_DELETE_EXPR]
        )

    def cxx_unary_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_UNARY_EXPR]
        )

    def objc_string_literals(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_STRING_LITERAL]
        )

    def objc_encode_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_ENCODE_EXPR]
        )

    def objc_selector_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_SELECTOR_EXPR]
        )

    def objc_protocol_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_PROTOCOL_EXPR]
        )

    def objc_bridge_cast_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_BRIDGE_CAST_EXPR]
        )

    def pack_expansion_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.PACK_EXPANSION_EXPR]
        )

    def size_of_pack_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.SIZE_OF_PACK_EXPR]
        )

    def lambda_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.LAMBDA_EXPR]
        )

    def obj_bool_literal_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJ_BOOL_LITERAL_EXPR]
        )

    def obj_self_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJ_SELF_EXPR]
        )

    def omp_array_section_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_ARRAY_SECTION_EXPR]
        )

    def objc_availability_check_exprs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_AVAILABILITY_CHECK_EXPR]
        )

    def unexposed_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.UNEXPOSED_STMT]
        )

    def label_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.LABEL_STMT]
        )

    def compound_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.COMPOUND_STMT]
        )

    def case_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CASE_STMT]
        )

    def default_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.DEFAULT_STMT]
        )

    def if_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.IF_STMT]
        )

    def switch_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.SWITCH_STMT]
        )

    def while_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.WHILE_STMT]
        )

    def do_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.DO_STMT]
        )

    def for_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.FOR_STMT]
        )

    def goto_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.GOTO_STMT]
        )

    def indirect_goto_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.INDIRECT_GOTO_STMT]
        )

    def continue_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CONTINUE_STMT]
        )

    def break_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.BREAK_STMT]
        )

    def return_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.RETURN_STMT]
        )

    def asm_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.ASM_STMT]
        )

    def objc_at_try_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_AT_TRY_STMT]
        )

    def objc_at_catch_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_AT_CATCH_STMT]
        )

    def objc_at_finally_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_AT_FINALLY_STMT]
        )

    def objc_at_throw_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_AT_THROW_STMT]
        )

    def objc_at_synchronized_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_AT_SYNCHRONIZED_STMT]
        )

    def objc_autorelease_pool_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_AUTORELEASE_POOL_STMT]
        )

    def objc_for_collection_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OBJC_FOR_COLLECTION_STMT]
        )

    def cxx_catch_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_CATCH_STMT]
        )

    def cxx_try_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_TRY_STMT]
        )

    def cxx_for_range_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_FOR_RANGE_STMT]
        )

    def seh_try_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.SEH_TRY_STMT]
        )

    def seh_except_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.SEH_EXCEPT_STMT]
        )

    def seh_finally_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.SEH_FINALLY_STMT]
        )

    def ms_asm_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.MS_ASM_STMT]
        )

    def null_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.NULL_STMT]
        )

    def decl_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.DECL_STMT]
        )

    def omp_parallel_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_PARALLEL_DIRECTIVE]
        )

    def omp_simd_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_SIMD_DIRECTIVE]
        )

    def omp_for_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_FOR_DIRECTIVE]
        )

    def omp_sections_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_SECTIONS_DIRECTIVE]
        )

    def omp_section_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_SECTION_DIRECTIVE]
        )

    def omp_single_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_SINGLE_DIRECTIVE]
        )

    def omp_parallel_for_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_PARALLEL_FOR_DIRECTIVE]
        )

    def omp_parallel_sections_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_PARALLEL_SECTIONS_DIRECTIVE]
        )

    def omp_task_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TASK_DIRECTIVE]
        )

    def omp_master_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_MASTER_DIRECTIVE]
        )

    def omp_critical_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_CRITICAL_DIRECTIVE]
        )

    def omp_taskyield_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TASKYIELD_DIRECTIVE]
        )

    def omp_barrier_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_BARRIER_DIRECTIVE]
        )

    def omp_taskwait_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TASKWAIT_DIRECTIVE]
        )

    def omp_flush_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_FLUSH_DIRECTIVE]
        )

    def seh_leave_stmts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.SEH_LEAVE_STMT]
        )

    def omp_ordered_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_ORDERED_DIRECTIVE]
        )

    def omp_atomic_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_ATOMIC_DIRECTIVE]
        )

    def omp_for_simd_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_FOR_SIMD_DIRECTIVE]
        )

    def omp_parallelforsimd_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_PARALLELFORSIMD_DIRECTIVE]
        )

    def omp_target_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TARGET_DIRECTIVE]
        )

    def omp_teams_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TEAMS_DIRECTIVE]
        )

    def omp_taskgroup_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TASKGROUP_DIRECTIVE]
        )

    def omp_cancellation_point_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_CANCELLATION_POINT_DIRECTIVE]
        )

    def omp_cancel_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_CANCEL_DIRECTIVE]
        )

    def omp_target_data_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TARGET_DATA_DIRECTIVE]
        )

    def omp_task_loop_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TASK_LOOP_DIRECTIVE]
        )

    def omp_task_loop_simd_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TASK_LOOP_SIMD_DIRECTIVE]
        )

    def omp_distribute_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_DISTRIBUTE_DIRECTIVE]
        )

    def omp_target_enter_data_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TARGET_ENTER_DATA_DIRECTIVE]
        )

    def omp_target_exit_data_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TARGET_EXIT_DATA_DIRECTIVE]
        )

    def omp_target_parallel_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TARGET_PARALLEL_DIRECTIVE]
        )

    def omp_target_parallelfor_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TARGET_PARALLELFOR_DIRECTIVE]
        )

    def omp_target_update_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TARGET_UPDATE_DIRECTIVE]
        )

    def omp_distribute_parallelfor_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(),
            [CursorKind.OMP_DISTRIBUTE_PARALLELFOR_DIRECTIVE],
        )

    def omp_distribute_parallel_for_simd_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(),
            [CursorKind.OMP_DISTRIBUTE_PARALLEL_FOR_SIMD_DIRECTIVE],
        )

    def omp_distribute_simd_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_DISTRIBUTE_SIMD_DIRECTIVE]
        )

    def omp_target_parallel_for_simd_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(),
            [CursorKind.OMP_TARGET_PARALLEL_FOR_SIMD_DIRECTIVE],
        )

    def omp_target_simd_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TARGET_SIMD_DIRECTIVE]
        )

    def omp_teams_distribute_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OMP_TEAMS_DISTRIBUTE_DIRECTIVE]
        )

    def translation_units(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.TRANSLATION_UNIT]
        )

    def unexposed_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.UNEXPOSED_ATTR]
        )

    def ib_action_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.IB_ACTION_ATTR]
        )

    def ib_outlet_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.IB_OUTLET_ATTR]
        )

    def ib_outlet_collection_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.IB_OUTLET_COLLECTION_ATTR]
        )

    def cxx_final_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_FINAL_ATTR]
        )

    def cxx_override_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CXX_OVERRIDE_ATTR]
        )

    def annotate_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.ANNOTATE_ATTR]
        )

    def asm_label_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.ASM_LABEL_ATTR]
        )

    def packed_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.PACKED_ATTR]
        )

    def pure_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.PURE_ATTR]
        )

    def const_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CONST_ATTR]
        )

    def noduplicate_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.NODUPLICATE_ATTR]
        )

    def cudaconstant_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CUDACONSTANT_ATTR]
        )

    def cudadevice_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CUDADEVICE_ATTR]
        )

    def cudaglobal_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CUDAGLOBAL_ATTR]
        )

    def cudahost_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CUDAHOST_ATTR]
        )

    def cudashared_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CUDASHARED_ATTR]
        )

    def visibility_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.VISIBILITY_ATTR]
        )

    def dllexport_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.DLLEXPORT_ATTR]
        )

    def dllimport_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.DLLIMPORT_ATTR]
        )

    def convergent_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.CONVERGENT_ATTR]
        )

    def warn_unused_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.WARN_UNUSED_ATTR]
        )

    def warn_unused_result_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.WARN_UNUSED_RESULT_ATTR]
        )

    def aligned_attrs(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.ALIGNED_ATTR]
        )

    def preprocessing_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.PREPROCESSING_DIRECTIVE]
        )

    def macro_definitions(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.MACRO_DEFINITION]
        )

    def macro_instantiations(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.MACRO_INSTANTIATION]
        )

    def inclusion_directives(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.INCLUSION_DIRECTIVE]
        )

    def module_import_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.MODULE_IMPORT_DECL]
        )

    def type_alias_template_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.TYPE_ALIAS_TEMPLATE_DECL]
        )

    def static_asserts(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.STATIC_ASSERT]
        )

    def friend_decls(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.FRIEND_DECL]
        )

    def overload_candidates(self):
        return self.filter_node_list_by_node_kind(
            self._cursor.get_children(), [CursorKind.OVERLOAD_CANDIDATE]
        )
